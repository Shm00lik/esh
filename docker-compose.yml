version: '3.8'

services:
  db:
    image: postgres:13
    container_name: esh-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-esh}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: esh-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-esh}
      - POSTGRES_HOST=db
      - FRONTEND_URL=${FRONTEND_URL:-http://192.168.50.161:3000}
    depends_on:
      db:
        condition: service_healthy

  db-setup:
    build: ./backend
    container_name: esh-db-setup
    command: python db_setup.py
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-esh}
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:

